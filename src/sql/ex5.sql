-- CREATE TABLE OPERATIONS
-- (
--     ID         INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     ROUTE_ID   INT,
--     OBJECT_NUM INT,
--     START_TIME TIMESTAMP NOT NULL,
--     END_TIME   TIMESTAMP NOT NULL
-- );
--
-- INSERT INTO OPERATIONS (ROUTE_ID, OBJECT_NUM, START_TIME, END_TIME)
--     (SELECT route_id,
--             OBJECT_NUM,
--             TO_TIMESTAMP(start_time, 'DD.MM.YYYY HH24:MI::SS'),
--             TO_TIMESTAMP(end_time, 'DD.MM.YYYY HH24:MI::SS')
--      FROM dataset6);

-- 1
SELECT ROUTE_ID,
       OBJECT_NUM,
       (SELECT EXTRACT(EPOCH FROM
                       (SELECT END_TIME - START_TIME WHERE ROUTE_ID = O.ROUTE_ID AND OBJECT_NUM = O.OBJECT_NUM))) / 60
           AS minutes
FROM OPERATIONS AS O
ORDER BY 1, 2;


-- 2
SELECT ROUTE_ID,
       OBJECT_NUM,
       CASE
           WHEN (SELECT END_TIME - START_TIME WHERE ROUTE_ID = O.ROUTE_ID AND OBJECT_NUM = O.OBJECT_NUM) >
                (avg((SELECT END_TIME - START_TIME WHERE ROUTE_ID = O.ROUTE_ID))
                 OVER (PARTITION BY ROUTE_ID)) THEN 1
           ELSE 0
           END AS is_greater
FROM OPERATIONS AS O
ORDER BY 1, 2;


-- 3
SELECT ROUTE_ID,
       OBJECT_NUM,
       CASE
           WHEN (SELECT END_TIME - START_TIME WHERE ROUTE_ID = O.ROUTE_ID AND OBJECT_NUM = O.OBJECT_NUM) >
                (AVG((SELECT END_TIME - START_TIME
                      WHERE ROUTE_ID = O.ROUTE_ID
                      ORDER BY OBJECT_NUM DESC
                      LIMIT 3))
                 OVER (PARTITION BY ROUTE_ID)) THEN 1
           ELSE 0
           END AS is_greater
FROM OPERATIONS AS O
ORDER BY 1, 2;